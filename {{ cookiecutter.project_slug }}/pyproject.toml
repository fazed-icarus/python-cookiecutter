{%- if cookiecutter.package_manager == 'poetry' %}
[tool.poetry]
name = "{{ cookiecutter.module_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author }} <{{ cookiecutter.email }}>"]

[tool.poetry.dependencies]
python = "^{{ cookiecutter.python_version }}"

[tool.poetry.dev-dependencies]
pytest = "^6.2"
flake8 = "^3.9.2"
pytest-cov = "^2.10"
isort = "^5.9"
bandit = "^1.6"
safety = "^1.9"
mkdocs = "^1.1"
bump2version = "^1.0"
invoke = "^1.4"
flit = "^3.2.0"
docstr-coverage = "^1.2"
pydocstyle = "^6.1"
mkdocs-material = "^5.4"
mkdocstrings = "^0.13.2"

{% endif %}
[tool.flit.metadata]
module = "{{ cookiecutter.module_name }}"
author = "{{ cookiecutter.author }}"
author-email = "{{ cookiecutter.email }}"
home-page = "https://github.com/{{ cookiecutter.account }}/{{ cookiecutter.project_slug }}"
requires = []
classifiers = ["License :: OSI Approved :: Apache Software License"]

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3

[tool.mypy]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.black]
include = '\.pyi?$'
exclude = '''

(
  /(
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vagrant
    | _build
    | dist
  )
)
'''

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:invoke.*:",
    "ignore::DeprecationWarning:_yaml.*:",
]
